/**
  @page TIM9_OCToggle TIM9 OC Toggle example
  
  @verbatim
  ******************** (C) COPYRIGHT 2010 STMicroelectronics *******************
  * @file    TIM/TIM9_OCToggle/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    31-December-2010
  * @brief   Description of the TIM9 OC Toggle example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure the TIM9 peripheral to generate two different 
signals with two different frequencies.

The TIM9CLK frequency is set to SystemCoreClock / 2 (Hz), and we want to get TIM9
counter clock at 4 MHz so the Prescaler is computed as following:
   - Prescaler = (TIM9CLK / TIM9 counter clock) - 1
SystemCoreClock is set to 32 MHz for Ultra Low Power Medium-Density Devices.

The TIM9 CCR1 register value is equal to 10928: 
CC1 update rate = TIM9 counter clock / CCR1_Val = 366.03 Hz,
so the TIM9 Channel 1 generates a periodic signal with a frequency equal to 183.1 Hz.

The TIM9 CCR2 register is equal to 5464:
CC2 update rate = TIM9 counter clock / CCR2_Val = 732.06 Hz
so the TIM9 channel 2 generates a periodic signal with a frequency equal to 366.3 Hz.


@par Directory contents 

  - TIM/TIM9_OCToggle/stm32l1xx_conf.h    Library Configuration file
  - TIM/TIM9_OCToggle/stm32l1xx_it.c      Interrupt handlers
  - TIM/TIM9_OCToggle/stm32l1xx_it.h      Interrupt handlers header file
  - TIM/TIM9_OCToggle/main.c              Main program
  - TIM/TIM9_OCToggle/system_stm32l1xx.c  STM32L1xx system source file
  
@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power Medium-Density Devices.
  
  - This example has been tested with STMicroelectronics STM32L152-EVAL (STM32L1xx 
    Ultra Low Power Medium-Density) evaluation board and can be easily tailored 
    to any other supported device and development board.

  - STM32L152-EVAL Set-up 
    - Connect the following pins to an oscilloscope to monitor the different 
      waveforms:
        - TIM9 CH1 (PA.02) 
        - TIM9 CH2 (PA.03) 
  
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

@note
- Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
  microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.  
   
 * <h3><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h3>
 */
