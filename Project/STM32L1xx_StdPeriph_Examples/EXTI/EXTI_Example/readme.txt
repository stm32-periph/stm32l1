/**
  @page EXTI_Example EXTI Configuration Example
  
  @verbatim
  ******************** (C) COPYRIGHT 2010 STMicroelectronics *******************
  * @file    EXTI/EXTI_Example/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    31-December-2010
  * @brief   Description of the EXTI example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure external interrupt lines.
In this example, 4 EXTI lines (EXTI0, EXTI8, EXTI9 and EXTI10) are configured 
to generate an interrupt on each falling edge. In the interrupt routine a led
connected to a specific GPIO pin is toggled.

In this example:
  - EXTI0 is mapped to PA0
  - EXTI8 is mapped to PE8
  - EXTI9 is mapped to PE9
  - EXTI10 is mapped to PE10

After EXTI configuration, a software interrupt is generated on the EXTI0 toggles LED1.
After that,
  when falling edge is detected on EXTI0, LED1 toggles
  when falling edge is detected on EXTI8, LED2 toggles
  when falling edge is detected on EXTI9, LED3 toggles
  when falling edge is detected on EXTI10, LED4 toggles

If STM32L152-EVAL is used,
  when Key push-button is pressed, LED1 toggles
  when Joystick Sel push-button is pressed, LED2 toggles
  when Joystick Up push-button is pressed, LED3 toggles
  when Joystick Down push-button is pressed, LED4 toggles

In this example, EXTI0_Config() function can be substituted by 
STM_EVAL_PBInit(Button_KEY, Mode_EXTI) provided in the STM32L1XX-EVAL driver.

@par Directory contents 

  - EXTI/EXTI_Example/stm32l1xx_conf.h    Library Configuration file
  - EXTI/EXTI_Example/stm32l1xx_it.h      Interrupt handlers header file
  - EXTI/EXTI_Example/stm32l1xx_it.c      Interrupt handlers
  - EXTI/EXTI_Example/main.c              Main program
  - EXTI/EXTI_Example/system_stm32l1xx.c  STM32L1xx system source file

@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power Medium-Density Devices.

  - This example has been tested with STMicroelectronics STM32L152-EVAL (STM32L1xx 
    Ultra Low Power Medium-Density) evaluation board and can be easily tailored 
    to any other supported device and development board.
    To select the STMicroelectronics evaluation board used to run the example, 
    uncomment the corresponding line in stm32_eval.h file (under Utilities\STM32_EVAL)

  - STM32L152-EVAL Set-up  
    - Use LD1 led connected to PD0 pin
    - Use LD2 led connected to PD1 pin
    - Use LD3 led connected to PD4 pin
    - Use LD4 led connected to PD5 pin
    - Use the Key push-button connected to pin PA0 (EXTI Line0)
    - Use the Joystick Sel push-button connected to pin PE8 (EXTI Line8)
    - Use the Joystick Up push-button connected to pin PE9 (EXTI Line9)
    - Use the Joystick Down push-button connected to pin PE10 (EXTI Line10)
    @Note make sure that JP18 and JP19 are fitted

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

@note
 - Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
   microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.
   
 * <h3><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h3>
 */
