/**
  @page RTC_Calendar RTC Hardware Calendar example
  
  @verbatim
  ******************** (C) COPYRIGHT 2010 STMicroelectronics *******************
  * @file    RTC/Calendar/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    31-December-2010
  * @brief   Description of the RTC Hardware Calendar example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a short description of how to use the RTC peripheral.
By default, the Calendar Time (initialised in main.c file) is displayed on LCD
glass. When the user press KEY button, the Calendar Date (initialised 
in main.c file) is displayed on LCD glass. After each switch between Calendar 
time and Calendar date, the LED 1 toggle.

@par Directory contents 

  - RTC/Calendar/stm32l1xx_conf.h     Library Configuration file
  - RTC/Calendar/stm32l1xx_it.c       Interrupt handlers
  - RTC/Calendar/stm32l1xx_it.h       Header for stm32l1xx_it.c
  - RTC/Calendar/main.c               Main program
  - RTC/Calendar/system_stm32l1xx.c   STM32L1xx system source file
  
@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power Medium-Density Devices.
  
  - This example has been tested with STMicroelectronics STM32L152-EVAL (STM32L1xx 
    Ultra Low Power Medium-Density) evaluation board and can be easily tailored 
    to any other supported device and development board.

  - STM32L152-EVAL Set-up
    - KEY button connected to PA.00 pin 
    - Use LED1 connected to PD.00 pin.
    - LCD Glass pins is shared with USART3 via jumpers, so make sure that
         Jumper 7 (JP7) is in position 1<-->2.
         Jumper 8 (JP8) is in position 1<-->2.
      
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

@note
- Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
  microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.
    
 * <h3><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h3>
 */
