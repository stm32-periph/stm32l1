/**
  @page AnalogVoltageMonitoring COMP Analog voltage monitoring example
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    COMP/AnalogVoltageMonitoring/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.2
  * @date    17-November-2021
  * @brief   Description of the COMP Analog voltage monitoring example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2015 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

  In some applications, it is recommended to power-on ADC1 only if it is required 
  since it can jeopardize battery life time if left powered-on continuously. 
  In this example, COMP2 is used to monitor the analog voltage while the MCU 
  is in stop mode and to wake-up the system if a predefined threshold is crossed.
  When the analog voltage crosses the threshold, the COMP2 is powered-off and
  ADC1 is powered-on to perform continuous conversion.

  MCU is switching between two modes: 
    - If analog voltage is above the internal reference voltage (VREFINT), 
      ADC1 is powered-on and continuous conversion is performed of channel 18 (PB12)
      for STM32L152_EVAL and performed of channel 31 (PF10) for STM32L152D_EVAL :
      MCU is in run mode, LD1 is OFF and measured voltage is displayed on 
      LCD Glass and color LCD for STM32L152_EVAL and on only color LCD for 
      STM32L152D_EVAL.
    - If analog voltage is under VREFINT, ADC1 is powered-off and COMP2 is 
      powered-on, the MCU enters stop mode and LD1 is ON.

  COMP2 is configured as following:
    - Inverting input is VREFINT: this is the selected threshold
    - Non Inverting input is connected to PB5
    - Edge detection config is rising edge

@par Directory contents 

  - COMP/AnalogVoltageMonitoring/stm32l1xx_conf.h     Library Configuration file
  - COMP/AnalogVoltageMonitoring/stm32l1xx_it.c       Interrupt handlers
  - COMP/AnalogVoltageMonitoring/stm32l1xx_it.h       Header for stm32l1xx_it.c
  - COMP/AnalogVoltageMonitoring/main.c               Main program
  - COMP/AnalogVoltageMonitoring/main.h               Main Header file
  - COMP/AnalogVoltageMonitoring/system_stm32l1xx.c   STM32L1xx system source file

@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power High-, Medium-Density and Medium-Density Plus Devices.

  - This example has been tested with STMicroelectronics STM32L152D-EVAL (STM32L1xx 
    Ultra Low Power High-Density) and STM32L152-EVAL (STM32L1xx Ultra Low 
    Power Medium-Density) evaluation board and can be easily tailored to any 
    other supported device and development board.


  - STM32L152-EVAL Set-up
    - Connect a variable power supply 0-3.3V to both: ADC Channel18 mapped on pin PB.12
      (potentiometer RV3) and COMP2 inverting input mapped on pin PB5.
    @note Using Jumper JP17, connect one jumper in PB12 and another in PB5 
          position. Thus PB5 and PB12 are both connected to RV3.
    - Remove jumper JP11
    - Make sure that JP10 is in TRST position

  - STM32L152D-EVAL Set-up
   - Connect a variable power supply 0-3.3V to both: ADC Channel31 mapped on pin PF.10
     (potentiometer RV3) and COMP2 inverting input mapped on pin PB5.
    @note Using Jumper JP13, connect one jumper in ADC and another in COM_IN+ 
          position. Thus PB5 and PF10 are both connected to RV3.
    - Remove jumper JP14

@par How to use it ? 

In order to make the program work, you must do the following:
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Templates
 - Open your preferred toolchain
 - If the used device is STM32L1XX_MD choose "STM32L1XX_MD(STM32L1xxxBxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.c
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_lcd.c
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_glass_lcd.c
 - If the used device is STM32L1XX_HD choose "STM32L1XX_HD(STM32L1xxxDxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval.c
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval_lcd.c
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval_glass_lcd.c
 - Rebuild all files and load your image into target memory
 - Run the example

@note
- Ultra Low Power Medium-density devices: - STM32L151x6xx, STM32L151x8xx, STM32L151xBxx, STM32L152x6xx,
                                            STM32L152x8xx, STM32L152xBxx, STM32L151x6xxA, STM32L151x8xxA,
                                            STM32L151xBxxA, STM32L152x6xxA, STM32L152x8xxA and STM32L152xBxxA
                                          - STM32L100x6xx, STM32L100x8xx and STM32L100xBxx
- Ultra Low Power Medium-density Plus devices: - STM32L151xCxx, STM32L152xCxx and STM32L162xCxx 
                                               - STM32L100xCxx
- Ultra Low Power High-density devices: STM32L151xDxx, STM32L152xDxx and STM32L162xDxx
- Ultra Low Power XL-density devices: STM32L151xExx, STM32L152xExx and STM32L162xExx
    

 */


