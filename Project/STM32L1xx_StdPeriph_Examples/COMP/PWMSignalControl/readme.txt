/**
  @page PWMSignalControl COMP2 PWM signal control example
  
  @verbatim
  ******************** (C) COPYRIGHT 2010 STMicroelectronics *******************
  * @file    COMP/PWMSignalControl/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    31-December-2010
  * @brief   Description of the COMP2 PWM signal control example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure COMP2 peripheral to hold on safe state
(low level) TIM2 channels as soon as COMP2 output is set at high level.

  - COMP2 is configured as following:
     - Inverting input is internally connected to VREFINT = 1.22V
     - Non Inverting input is connected to PB5
     - Output is internally connected to TIM2 OCREFCLR (output compare reference clear)

  - TIM2CLK is set to 32 MHz, the TIM2 Prescaler is equal to 0 so the TIM2 counter
    clock used is 32 MHz.
    TIM2 frequency is defined as follow:
    TIM2 channels frequency = TIM2 counter clock / (Period + 1) 
                            = 32000000 /(65535 + 1) 
                            = 488 Hz.

  - External voltage should be connected to PB5 (RV3 potentiometer can be used).

  - Connect an oscilloscope to TIM2 channels (PA0 and PA1) to display waveforms. 

  - While PB5 is lower than VREFINT (1.22V), PWM signal is displayed on PA0 and PA1.
    While PB5 is higher than VREFINT, PA0 and PA1 are in low level.

@par Directory contents 

  - COMP/PWMSignalControl/stm32l1xx_conf.h     Library Configuration file
  - COMP/PWMSignalControl/stm32l1xx_it.c       Interrupt handlers
  - COMP/PWMSignalControl/stm32l1xx_it.h       Header for stm32l1xx_it.c
  - COMP/PWMSignalControl/main.c               Main program
  - COMP/PWMSignalControl/system_stm32l1xx.c   STM32L1xx system source file


@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power Medium-Density Devices.

  - This example has been tested with STMicroelectronics STM32L152-EVAL (STM32L1xx 
    Ultra Low Power Medium-Density) evaluation board and can be easily tailored 
    to any other supported device and development board.
    To select the STMicroelectronics evaluation board used to run the example, 
    uncomment the corresponding line in stm32_eval.h file (under Utilities\STM32_EVAL)

  - STM32L152-EVAL Set-up
    - Make sure that JP17 is set in PB5 position (to connect Potentiometer RV3
      to COMP2 non inverting input)
    - Remove jumper JP11

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
 - Connect TIM2 channels to an oscilloscope
 - Rotate RV3 potentiometer and note PA0 and PA1 states changing: 
    if RV3 < VREFINT, PA0 and PA1 at PWM
    if RV3 > VREFINT, PA0 and PA1 at low level

@note
- Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
  microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.
    
 * <h3><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h3>
 */
